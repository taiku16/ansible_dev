#!/bin/sh
# THIS FILE IS MANAGED BY PUPPET, ANY LOCAL CHANGES WILL BE DESTROYED

# TODO: read LDAP config files in from /etc

# Get the base for user account info from ldap.conf
SEARCH_BASE='ou=netgroup,o=unixteam'

# Get all the configured LDAP hosts from ldap.conf
#LDAPHOSTS='ldap-101.unix.mgmt.det ldap-102.unix.mgmt.det ldap-201.unixu.mgmt.det ldap-202.unixu.mgmt.det'
LDAPHOSTS='unixldap-991-1.mgmt.det unixldap-991-2.mgmt.det unixldap-992-1.mgmt.det unixldap-992-2.mgmt.det unixldap-991-1.det.nsw.edu.au unixldap-991-2.det.nsw.edu.au unixldap-992-1.det.nsw.edu.au unixldap-992-2.det.nsw.edu.au'

BIND_DN=''
BIND_PW=''

AUTH_OPT='-x'

if [ -n "$BIND_DN" -a -n "$BIND_PW" ]
then
  AUTH_OPT="-x -D $BIND_DN -w $BIND_PW"
fi

for ldaphost in $LDAPHOSTS
do
  LDAP_URIS="${LDAP_URIS} ldap://${ldaphost}/"
done
LDAP_URIS=$(echo $LDAP_URIS | sed 's/ /,/g')



usage() {
  echo "Usage: $(basename $0) [options] ACTION [args]"
  echo "Options:"
  echo "  -h    this help message"
  echo "Actions: list, info, detail, members, forhost"
  return 65
}

recurse_member() {
  netgroup=$1

  for netgroup in $(/usr/bin/ldapsearch -LLL -H "$LDAP_URIS" $AUTH_OPT -b "$SEARCH_BASE" "(memberNisNetgroup=$netgroup)" cn | awk '/cn:/ {print $2}' | sort -u)
  do
    if [ -n "$netgroup" ]; then
      echo $netgroup
      recurse_member $netgroup
    fi
  done
}

list_all() {
  ldapsearch -LLL -x \
             -H "$LDAP_URIS" \
             -b "$SEARCH_BASE" cn | awk '/cn:/ {print$2}' | sort -u
  return $?
}

host_netgroups() {
  host=$1

  if [ "x$host" = 'x' ]; then
    host=$(hostname -s)
  fi

  direct_members=$(/usr/bin/ldapsearch -LLL -x \
                   -H "$LDAP_URIS" \
                   -b "$SEARCH_BASE" \
                   $AUTH_OPT \
                   "(| \
                     (nisNetgroupTriple=\(,,\)) \
                     (nisNetgroupTriple=\(${host},,\)) \
                     (nisNetgroupTriple=\(${host}.*\)) \
                   )" cn | awk '/cn:/ {print $2}' | sort -u)

  if [ -z "$direct_members" ]
  then
    echo "$host is not a member of any netgroups"
    return 1
  fi

  var=''
  for netgroup in $direct_members
  do
    more=$(recurse_member $netgroup)
    if [ "x$var" = 'x' ]; then
      var=$(echo -e "$netgroup\n$more")
    else
      var=$(echo -e "$var\n$netgroup\n$more")
    fi
  done

  echo "$var" | sort -u
  return 0
}

list_members() {
  netgroup=$1

  getent netgroup $netgroup | sed 's/(/\n(/g;s/[(), ]//g' | grep -v "^$netgroup$"
  return $?
}

info() {
  netgroup=$1

  ldapsearch -LLL -x \
             -H "$LDAP_URIS" \
             -b "$SEARCH_BASE" cn="$netgroup" description | awk -F': ' '/^description:/ {print $2}'
  return $?
}

detail() {
  netgroup=$1

  ldapsearch -LLL -x \
             -H "$LDAP_URIS" \
             -b "$SEARCH_BASE" cn="$netgroup"
  return $?
}

while getopts "h" Option
do
  case $Option in
    h ) usage
        exit 0
        ;;
  esac
done

shift $(($OPTIND - 1))
ACTION=$1
shift
ARGS=$@

RETVAL=0
case "$ACTION" in
  detail  ) detail $ARGS
            RETVAL=$?
            ;;
  host    ) host_netgroups $ARGS
            RETVAL=$?
            ;;
  forhost ) host_netgroups $ARGS
            RETVAL=$?
            ;;
  info    ) info $ARGS
            RETVAL=$?
            ;;
  list    ) list_all
            RETVAL=$?
            ;;
  members ) list_members $ARGS
            RETVAL=$?
            ;;
  *       ) usage
            RETVAL=$?
            ;;
esac

exit $RETVAL


# vim: ts=2 sw=2 et syn=sh
